{"version":3,"sources":["pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","utils/queries.js","components/SearchForm.js","pages/SearchPage.js","components/Header.js","components/Footer.js","components/PlacesAutocomplete.js","components/PlaceForm.js","components/MyReviews.js","pages/Profile.js","pages/SinglePlace.js","pages/NotFound.js","App.js","reportWebVitals.js","styles/theme.js","styles/components/ButtonStyles.js","styles/components/LinkStyles.js","styles/components/HeadingStyles.js","index.js"],"names":["Home","align","justify","base","md","xl","direction","wrap","minH","mb","w","sm","variant","fontSize","lg","textAlign","size","opacity","fontWeight","href","mt","type","color","LOGIN_USER","gql","ADD_USER","ADD_PLACE","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","status","mr","onSubmit","id","isRequired","placeholder","className","onChange","message","Signup","username","addUser","QUERY_USER","QUERY_ME","QUERY_REVIEWS","QUERY_PLACE_REVIEWS","QUERY_SEARCH","SearchForm","placeType","rating","useLazyQuery","placeSearch","reviews","spacing","columns","mx","length","map","review","index","place","placeName","placeLocation","_id","Search","Header","useDisclosure","isOpen","onOpen","onClose","h","alignItems","justifyContent","icon","Close","Hamburger","display","onClick","as","loggedIn","logout","ml","pb","autoComplete","Footer","handleScriptLoad","updateQuery","autoCompleteRef","center","defaultBounds","north","south","east","west","google","maps","places","Autocomplete","current","bounds","types","componentRestrictions","country","fields","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","address_component","PlacesAutocomplete","setQuery","useRef","useEffect","url","callback","script","document","createElement","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","loadScript","process","formstate","formatted_address","ref","PlaceForm","comment","update","cache","addPlace","readQuery","writeQuery","e","me","MyReviews","user","colSpan","createdAt","Profile","userParam","useParams","useQuery","loading","getProfile","to","templateRows","templateColumns","gap","PlaceDetails","placeId","placeReviews","item","NotFound","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","cookies","ApolloProvider","maxW","px","m","exact","path","component","SearchPage","SinglePlace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","myNewTheme","extendTheme","colors","primary","secondary","highlight","warning","danger","components","Button","baseStyle","sizes","variants","bg","_hover","boxShadow","transform","hamburger","border","borderColor","defaultprops","Link","textDecoration","lineHeight","Heading","hero","fontFamily","Alert","styles","global","body","ReactDOM","render","StrictMode","theme","getElementById"],"mappings":"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","file":"static/js/main.b152dca8.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Flex,\n  Heading,\n  Button,\n  Link,\n  Box,\n  Stack,\n  Center,\n  Text,\n} from \"@chakra-ui/react\";\nimport { FaWaveSquare } from \"react-icons/fa\";\n\nconst Home = () => {\n  return (\n    <Flex\n      align=\"center\"\n      justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\n      direction={{ base: \"column-reverse\", md: \"row\" }}\n      wrap=\"no-wrap\"\n      minH=\"65vh\"\n      mb={10}\n    >\n      <Stack\n        w={{ base: \"100%\", sm: \"100%\", md: \"70%\" }}\n        align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\n      >\n        <Heading\n        variant=\"hero\"   \n        fontSize={{ base: \"70px\", md: \"80px\", lg: \"125px\" }}\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          HEARO\n        </Heading>\n\n        <Text\n          size={\"lg\"}\n          fontSize={{ base: \"18px\", md: \"20px\", lg: \"25px\" }}\n          opacity=\"0.8\"\n          fontWeight=\"normal\"\n         \n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          Find quiet places to socialise in Sydney.\n        </Text>\n        <Center>\n          <Link href=\"/search\">\n            <Button\n            mt={5}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Search\n            </Button>\n          </Link>\n        </Center>\n      </Stack>\n\n      <Box w={{ base: \"40%\", sm: \"40%\", md: \"40%\" }} mb={{ base: 12, md: 0 }}>\n        <FaWaveSquare color={\"#81e6d9\"} size={{ base: 200 }} />\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_PLACE = gql`\n  mutation addPlace(\n    $placeName: String!\n    $placeLocation: String!\n    $placeType: String!\n    $rating: String!\n    $comment: String!\n  ) {\n    addPlace(\n      placeName: $placeName\n      placeLocation: $placeLocation\n      placeType: $placeType\n      rating: $rating\n      comment: $comment\n    ) {\n      rating\n      comment\n      createdAt\n      place {\n        placeName\n        placeLocation\n        placeType\n      }\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport {\n  Heading,\n  Box,\n  Input,\n  FormControl,\n  FormLabel,\n  Button,\n  Text,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/react\";\n\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <Box>\n      {data ? (\n        <Alert status=\"success\">\n          <AlertIcon />\n          <AlertTitle mr={2}>Success!</AlertTitle>\n          <AlertDescription>You have logged in!</AlertDescription>\n        </Alert>\n      ) : (\n        <form onSubmit={handleFormSubmit}>\n          <Heading mb={5}>Login</Heading>\n          <FormControl id=\"email\" isRequired>\n            <FormLabel>Email</FormLabel>\n            <Input\n              placeholder=\"email\"\n              name=\"email\"\n              className=\"form-input\"\n              type=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n          </FormControl>\n          <FormControl mt={5} mb={7} id=\"password\" isRequired>\n            <FormLabel>Password</FormLabel>\n            <Input\n              placeholder=\"password\"\n              className=\"form-input\"\n              name=\"password\"\n              type=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n          </FormControl>\n          <Button\n             variant=\"primary\"\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </form>\n      )}\n\n      {error && <Text>{error.message}</Text>}\n    </Box>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport {\n  Heading,\n  Box,\n  Input,\n  FormControl,\n  FormLabel,\n  Button,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Box>\n      {data ? (\n        <Alert status=\"success\">\n          <AlertIcon />\n          <AlertTitle mr={2}>Success!</AlertTitle>\n          <AlertDescription>You have created an account!</AlertDescription>\n        </Alert>\n      ) : (\n        <form onSubmit={handleFormSubmit}>\n          <Heading mb={5}>Create an account</Heading>\n          <FormControl id=\"name\" isRequired>\n            <FormLabel>Name</FormLabel>\n            <Input\n              placeholder=\"name\"\n              className=\"form-input\"\n              name=\"username\"\n              type=\"text\"\n              onChange={handleChange}\n              value={formState.name}\n            />\n          </FormControl>\n          <FormControl mt={5} id=\"email\" isRequired>\n            <FormLabel>Email</FormLabel>\n            <Input\n              placeholder=\"email\"\n              className=\"form-input\"\n              name=\"email\"\n              type=\"email\"\n              onChange={handleChange}\n              value={formState.email}\n            />\n          </FormControl>\n          <FormControl mt={5} mb={7} id=\"password\" isRequired>\n            <FormLabel>Password</FormLabel>\n            <Input\n              placeholder=\"*****\"\n              className=\"form-input\"\n              name=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n              value={formState.password}\n            />\n          </FormControl>\n          <Button\n            variant={\"primary\"}\n            type=\"submit\"\n          >\n            Signup\n          </Button>\n        </form>\n      )}\n      {error && (\n        <Alert status=\"error\">\n          <AlertDescription>{error.message}</AlertDescription>\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default Signup;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      place {\n        placeName\n        placeLocation\n        placeType\n      }\n      review {\n        place {\n          placeName\n          placeLocation\n          _id\n        }\n        comment\n        rating\n        createdAt\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_REVIEWS = gql`\n  query getReviews {\n    reviews {\n      _id\n      comment\n      rating\n    }\n  }\n`;\n\nexport const QUERY_PLACE_REVIEWS = gql`\n  query placeReviews($placeId: ID!) {\n    placeReviews(placeId: $placeId) {\n      place {\n        _id\n        placeName\n        placeLocation\n        placeType\n      }\n      user {\n        _id\n        username\n        email\n      }\n      _id\n      comment\n      rating\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_SEARCH = gql`\n  query placeSearch($placeType: String, $rating: String) {\n    placeSearch(placeType: $placeType, rating: $rating) {\n      rating\n      comment\n      place {\n        placeName\n        placeLocation\n        placeType\n        _id\n      }\n      user {\n        username\n        email\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport {\n  Heading,\n  Button,\n  FormLabel,\n  FormControl,\n  Select,\n  Text,\n  Box,\n  Link,\n  Stack,\n  SimpleGrid\n} from \"@chakra-ui/react\";\nimport { QUERY_SEARCH } from \"../utils/queries\";\n\nconst SearchForm = () => {\n  const [formState, setFormState] = useState({\n    placeType: \"\",\n    rating: \"\",\n  });\n\n  const [placeSearch, { data }] = useLazyQuery(QUERY_SEARCH);\n\n  const reviews = data?.placeSearch || [];\n  console.log(\"data\", data);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      await placeSearch({\n        variables: { ...formState },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n    console.log(\"46\", formState);\n  };\n\n  return (\n    <>\n      \n       <Stack direction={[\"column\",\"column\",\"column\", \"row\"]} spacing=\"24px\">\n        <Box w={[\"100%\", \"100%\",\"100%\", \"60%\"]} mr=\"20\">\n          <Heading mb={5}>Search for a quiet place in Sydney</Heading>\n<form onSubmit={handleFormSubmit}>\n          <FormControl isRequired id=\"place\" mt={5}>\n            <FormLabel>Type of place</FormLabel>\n            <Select\n              onChange={handleChange}\n              name=\"placeType\"\n              value={formState.placeType}\n              placeholder=\"Select type of place\"\n            >\n              <option>Restaurant</option>\n              <option>Bar</option>\n              <option>Pub</option>\n            </Select>\n          </FormControl>\n\n          <FormControl isRequired id=\"rating\" mt={5} mb={7}>\n            <FormLabel>Loudness rating</FormLabel>\n            <Select\n              onChange={handleChange}\n              name=\"rating\"\n              value={formState.rating}\n              placeholder=\"Loudness rating\"\n            >\n              <option>Quiet</option>\n              <option>Average</option>\n              <option>Bit Loud</option>\n              <option>Loud</option>\n              <option>Very Loud</option>\n              <option>Very Very Loud</option>\n            </Select>\n          </FormControl>\n          <Button\n            type=\"submit\"\n          variant=\"primary\"\n          >\n            Submit\n          </Button>\n        \n      </form>\n      </Box>\n\n      <SimpleGrid\n        columns={{ base: 1, xl: 2 }}\n        spacing={'5'}\n        mx={'auto'}>\n         {reviews.length === 0 &&\n        <Text mt={15}>\n          There are no reviews, try another search.\n        </Text>\n      }\n        {reviews.map((review, index) => (\n          <Box mt={10} key={index}>\n            <Text>Place: {review.place.placeName}</Text>\n            <Text>Location: {review.place.placeLocation}</Text>\n            <Text>Type: {review.place.placeType}</Text>\n            <Link variant={\"highlight\"} href={`/places/${review.place._id}`}>See Reviews for {review.place.placeName}</Link>\n          </Box>\n        ))}\n      </SimpleGrid>\n      </Stack>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\n\nimport SearchForm from \"../components/SearchForm\";\n\nconst Search = () => {\n  return (\n    <>\n      <SearchForm />\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport {\n  Box,\n  Flex,\n  HStack,\n  IconButton,\n  Link,\n  Button,\n  useDisclosure,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport Auth from \"../utils/auth.js\";\n\nexport default function Header() {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const Links = [\"Home\", \"Search\"];\n\n  return (\n    <>\n      <Box mb={10}>\n        <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <IconButton\n            size={\"sm\"}\n            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n            aria-label={\"Open Menu\"}\n            display={{ md: \"none\" }}\n            variant={\"hamburger\"}\n            onClick={isOpen ? onClose : onOpen}\n          />\n          <HStack\n            spacing={8}\n            alignItems={\"center\"}\n            as={\"nav\"}\n            display={{ base: \"none\", md: \"flex\" }}\n          >\n            <Link variant=\"highlight\" href=\"/\">\n              Home\n            </Link>\n            <Link variant=\"highlight\" href=\"/search\">\n              Search\n            </Link>\n          </HStack>\n\n          <Flex alignItems={\"center\"}>\n            {Auth.loggedIn() ? (\n              <>\n                <Link href=\"/me\" variant={\"solid\"} mr={4}>\n                  Your Profile\n                </Link>\n                <Link onClick={logout}>\n                  <Button variant=\"primary\" size={\"sm\"}>\n                    Logout\n                  </Button>\n                </Link>\n              </>\n            ) : (\n              <>\n                <Link href=\"/login\">Login</Link>\n                <Link href=\"/signup\">\n                  <Button variant=\"primary\" size={\"sm\"} ml={4}>\n                    Signup\n                  </Button>\n                </Link>\n              </>\n            )}\n          </Flex>\n        </Flex>\n\n        {isOpen ? (\n          <Box pb={4} display={{ md: \"none\" }}>\n            <Stack as={\"nav\"} spacing={4}>\n              <Link variant=\"highlight\" href=\"/\">\n                Home\n              </Link>\n              <Link variant=\"highlight\" href=\"/search\">\n                Search\n              </Link>\n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Text, Flex, Link } from \"@chakra-ui/react\";\n\nconst Footer = () => {\n  return (\n    <Flex align=\"center\" justify=\"space-between\" wrap=\"wrap\" w=\"100%\" mt={10}>\n      <Link href=\"/\">\n      <Text fontSize=\"sm\" fontWeight=\"bold\">\n        HEARO &#169; 2021\n      </Text>\n      </Link>\n    </Flex>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FormLabel, FormControl, Input } from \"@chakra-ui/react\";\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  const center = { lat: -33.865143, lng: 151.2099 };\n  const defaultBounds = {\n    north: center.lat + 0.1,\n    south: center.lat - 0.1,\n    east: center.lng + 0.1,\n    west: center.lng - 0.1,\n  };\n\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current,\n    {\n      bounds: defaultBounds,\n      types: [\"establishment\"],\n      componentRestrictions: { country: \"au\" },\n      fields: [\"name\", \"formatted_address\"], \n    }\n  );\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.address_component;\n  console.log(\"query\", query);\n\n  console.log(\"addressobject\", addressObject);\n  updateQuery(addressObject);\n}\n\nfunction PlacesAutocomplete(props) {\n\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&libraries=places&type=restaurant`,\n      () => handleScriptLoad(setQuery, autoCompleteRef)\n    );\n  }, []);\n\n    useEffect(() => {\n props.setFormState((formstate)=>{\n  return {\n...formstate, \nplaceName: query.name,\nplaceLocation: query.formatted_address\n  }\n }) \n   \n  }, [query]);\nconsole.log(\"query\", query)\n  return (\n    <>\n      <FormControl isRequired>\n        <FormLabel>Where are you?</FormLabel>\n        <Input\n          ref={autoCompleteRef}\n          onChange={(event) => setQuery(event.target.value)}\n          placeholder=\"Enter Place\"\n          value={query.name}\n        />\n      </FormControl>\n    </>\n  );\n}\n\nexport default PlacesAutocomplete;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport PlacesAutocomplete from \"../components/PlacesAutocomplete\";\nimport {\n  Heading,\n  FormLabel,\n  FormControl,\n  Input,\n  Select,\n  Button,\n  Textarea,\n  Box,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n} from \"@chakra-ui/react\";\nimport { ADD_PLACE } from \"../utils/mutations\";\nimport { QUERY_REVIEWS, QUERY_ME } from \"../utils/queries\";\n\nconst PlaceForm = () => {\n  const [formState, setFormState] = useState({\n    placeName: \"\",\n    placeLocation: \"\",\n    placeType: \"\",\n    rating: \"\",\n    comment: \"\",\n  });\n\n  const [addPlace, { error }] = useMutation(ADD_PLACE, {\n    update(cache, { data: { addPlace } }) {\n      try {\n        const { reviews } = cache.readQuery({ query: QUERY_REVIEWS });\n        console.log(\"reviews\", reviews);\n        cache.writeQuery({\n          query: QUERY_REVIEWS,\n          data: { reviews: [addPlace, ...reviews] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, review: [...me.review, addPlace] } },\n      });\n    },\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      await addPlace({\n        variables: { ...formState },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      placeName: \"\",\n      placeLocation: \"\",\n      placeType: \"\",\n      rating: \"\",\n      comment: \"\",\n    });\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleFormSubmit}>\n        <Heading as=\"h3\" color=\"#7FE6D1\" size=\"md\" mb={5}>\n          Rate a place based on how loud it is:\n        </Heading>\n\n        <PlacesAutocomplete setFormState = {setFormState} />\n\n        <FormControl isRequired id=\"suburb\" mt={5}>\n          <FormLabel>Location</FormLabel>\n          <Input\n            onChange={handleChange}\n            placeholder=\"Suburb\"\n            name=\"placeLocation\"\n            value={formState.placeLocation || \"\"} \n          />\n        </FormControl>\n        <FormControl isRequired id=\"place\" mt={5}>\n          <FormLabel>Type of place</FormLabel>\n          <Select\n            onChange={handleChange}\n            name=\"placeType\"\n            value={formState.placeType || \"\"}\n            placeholder=\"Select type of place\"\n          >\n            <option>Restaurant</option>\n            <option>Bar</option>\n            <option>Pub</option>\n            <option>Other</option>;\n          </Select>\n        </FormControl>\n        <FormControl isRequired id=\"rating\" mt={5}>\n          <FormLabel>Loudness rating</FormLabel>\n          <Select\n            onChange={handleChange}\n            placeholder=\"Rating\"\n            name=\"rating\"\n            value={formState.rating || \"\"}\n          >\n            <option>Quiet</option>\n            <option>Average</option>\n            <option>Bit Loud</option>\n            <option>Loud</option>\n            <option>Very Loud</option>\n            <option>Very Very Loud</option>\n          </Select>\n        </FormControl>\n        <FormControl mt={5} mb={7} id=\"comment\">\n          <FormLabel>Comment</FormLabel>\n          <Textarea\n            onChange={handleChange}\n            placeholder=\"Comment\"\n            name=\"comment\"\n            value={formState.comment || \"\"}\n          />\n        </FormControl>\n        <Button\n         variant=\"primary\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n        {error && (\n          <Alert mt={10} status=\"warning\">\n            <AlertIcon />\n            <AlertDescription> {error.message}</AlertDescription>\n          </Alert>\n        )}\n      </form>\n    </Box>\n  );\n};\n\nexport default PlaceForm;\n","import React from \"react\";\nimport { Box, Text, Link, SimpleGrid, Heading, GridItem } from \"@chakra-ui/react\";\n\nconst MyReviews = (user) => {\n  const reviews = user.user.review;\n\n\n  console.log(\"reviews\", reviews);\n  // console.log(\"id\", reviews._id);\n\n  if (!reviews) {\n    return <Text>No reviews yet.</Text>\n  }\n\n  return (\n   \n    <>\n  \n      {reviews.map((review, index) => (\n        <GridItem colSpan={2} key={index}>\n          <Text>Place: {review.place.placeName}</Text>\n          <Text>Location: {review.place.placeLocation}</Text>\n          <Text>Comment: {review.comment}</Text>\n          <Text>Loudness rating: {review.rating}</Text>\n          <Text >Date: {review.createdAt}</Text>\n          <Link variant={\"highlight\"} href={`/places/${review.place._id}`}>Link to {review.place.placeName}</Link>\n        </GridItem>\n      ))}\n\n    </>\n  );\n};\n\nexport default MyReviews;\n","import React from \"react\";\nimport {\n  Heading,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Box,\n  Stack,\n  Spinner,\n  SimpleGrid,\n  Grid,\n  GridItem,\n} from \"@chakra-ui/react\";\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport PlaceForm from \"../components/PlaceForm\";\nimport MyReviews from \"../components/MyReviews\";\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n\n  console.log(\"user\", user);\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <Spinner color=\"primary\" />;\n  }\n\n  if (!user?.username) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        <AlertTitle mr={2}>You need to be logged in to see this. </AlertTitle>\n        <AlertDescription>\n          Use the navigation links above to sign up or log in!\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <Stack direction={[\"column\", \"column\", \"column\", \"row\"]} spacing=\"24px\">\n        <Box w={[\"100%\", \"100%\", \"100%\", \"100%\"]} mr=\"20\">\n          <Heading mb={5}>Hi {Auth.getProfile().data.username}!</Heading>\n          <PlaceForm />\n        </Box>\n        <Grid\n          templateRows=\"repeat(2, 1fr)\"\n          templateColumns=\"repeat(4, 1fr)\"\n          gap={10}\n          h=\"200px\"\n        >\n          <GridItem colSpan={4}>\n            <Heading color=\"primary\">Your reviews.</Heading>\n          </GridItem>\n\n          <MyReviews user={user} />\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Heading, Text, Box, Stack, Spinner } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_PLACE_REVIEWS } from \"../utils/queries\";\n\nconst PlaceDetails = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { placeId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_PLACE_REVIEWS, {\n    variables: { placeId: placeId },\n  });\n\n  const place = data?.placeReviews || {};\n\n  if (loading) {\n    return <Spinner color=\"primary\"/>\n  }\n  return (\n    <Stack>\n      <Box>\n      <Heading mb={5}>{place[0].place.placeName} details</Heading>\n        <Text>Location: {place[0].place.placeLocation}</Text>\n        <Text mb={5}>Type: {place[0].place.placeType}</Text>\n      </Box>\n      <Box>\n        {place.map((item, index) => (\n          <Box key={index}>\n            <Text>Rating: {item.rating}</Text>\n            <Text>Comment: {item.comment}</Text>\n            <Text mb={5}>Date: {item.createdAt}</Text>\n          </Box>\n        ))}\n      </Box>\n    </Stack>\n  );\n};\n\nexport default PlaceDetails;\n","import React from \"react\";\nimport {\n  Heading,\n} from \"@chakra-ui/react\";\n\n\nconst NotFound = () => {\n<Heading>Sorry that page does not exist.</Heading>\n\n}\n\n\nexport default NotFound;","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Flex } from \"@chakra-ui/react\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport SearchPage from \"./pages/SearchPage\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Profile from \"./pages/Profile\";\nimport SinglePlace from \"./pages/SinglePlace\";\nimport NotFound from \"./pages/NotFound\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App({ cookies }) {\n  return (\n    <ApolloProvider client={client}>\n      <Flex direction=\"column\" maxW={{ xl: \"1200px\" }} px={{ base: \"10\", sm: \"20\", md: \"20\" }} m=\"0 auto\">\n        <Header />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/search\" component={SearchPage} />\n            <Route exact path=\"/me\" component={Profile} />\n            <Route exact path=\"/places/:placeId\" component={SinglePlace} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/404\" component={NotFound} />\n          </Switch>\n        </Router>\n        <Footer />\n      </Flex>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\";\nimport { ButtonStyles as Button } from \"./components/ButtonStyles\";\nimport { LinkStyles as Link } from \"./components/LinkStyles\";\nimport { HeadingStyles as Heading } from \"./components/HeadingStyles\";\n\n\nexport const myNewTheme = extendTheme({\n  colors: {\n    primary: \"#7FE6D1\",\n    secondary: \"#62C5C1\",\n    highlight: \"#4EA4AC\",\n    warning: \"#428493\",\n    danger: \"#396576\",\n  },\n  components: {\n    Button,\n    Link,\n    Heading,\n     Alert: {\n        baseStyle: {\n          bg: \"primary\",\n    color: \"gray.800\"\n  },\n      },\n  },\n\n   styles: {\n    global: {\n      // styles for the `body`\n      body: {\n        bg: \"gray.800\",\n        color: \"white\",\n      },\n      // styles for the `a`\n      a: {\n        color: \"black\",\n        _hover: {\n          textDecoration: \"none\",\n        },\n      },\n    },\n  },\n});\n","export const ButtonStyles = {\n  baseStyle: {\n    fontWeight: \"bold\", \n  },\n\n  sizes: {},\n\n  variants: {\n    primary: (props) => ({\n      bg: \"primary\",\n      color: \"gray.800\",\n      _hover: {\n        bg: \"primary\",\n        boxShadow: \"md\",\n        transform: \"scale(1.03)\",\n      },\n  }),\n  hamburger: (props) => ({\n      bg: \"transparent\",\n      border: \"1px solid\",\n      borderColor: \"white\",\n      color: \"primary\",\n      _hover: {\n       \n      },\n  }),\n},\n\n  defaultprops: {},\n};\n","export const LinkStyles = {\n  baseStyle: {\n    fontWeight: \"bold\",\n    textDecoration: \"none\",\n    _hover: {\n      textDecoration: \"none\",\n    },\n  },\n\n  sizes: {},\n  variants: {\n    highlight: (props) => ({\n      color: \"primary\",\n      textDecoration: \"none\",\n      fontWeight: \"bold\",\n      lineHeight: \"1.5\",\n    }),\n  },\n\n  defaultprops: {},\n};\n","export const HeadingStyles = {\n  baseStyle: {\n    fontWeight: \"bold\", \n  },\n\n  sizes: {},\n\n  variants: {\n    hero: (props) => ({\n      fontFamily: \"Zen Tokyo Zoo\",\n      fontWeight: \"normal\",\n      lineHeight: \"1.0\"\n  }),\n},\n\n  defaultprops: {},\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { myNewTheme } from \"./styles/theme.js\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={myNewTheme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}